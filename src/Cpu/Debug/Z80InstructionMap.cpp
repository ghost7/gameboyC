#include "Z80InstructionMap.h"

Z80InstructionMap::Z80InstructionMap()
{
    populateInstructionMap();
    populateCBInstructionMap();
}

std::string Z80InstructionMap::getInstruction(uint8_t opCode)
{
    return instructions[opCode];
}

std::string Z80InstructionMap::getCBInstruction(uint8_t opCode)
{
    return cbInstructions[opCode];
}

void Z80InstructionMap::populateInstructionMap()
{
    instructions[0x00] = "NOP";
    instructions[0x01] = "LD BC,nn";
    instructions[0x02] = "LD (BC),A";
    instructions[0x03] = "INC BC";
    instructions[0x04] = "INC B";
    instructions[0x05] = "DEC B";
    instructions[0x06] = "LD B,n";
    instructions[0x07] = "RLCA";
    instructions[0x08] = "LD (nn),SP";
    instructions[0x09] = "ADD HL,BC";
    instructions[0x0A] = "LD A,(BC)";
    instructions[0x0B] = "DEC BC";
    instructions[0x0C] = "INC C";
    instructions[0x0D] = "DEC C";
    instructions[0x0E] = "LD C,n";
    instructions[0x0F] = "RRCA";
    instructions[0x10] = "STOP";
    instructions[0x11] = "LD DE,nn";
    instructions[0x12] = "LD (DE),A";
    instructions[0x13] = "INC DE";
    instructions[0x14] = "INC D";
    instructions[0x15] = "DEC D";
    instructions[0x16] = "LD D,n";
    instructions[0x17] = "RLA";
    instructions[0x18] = "JR e";
    instructions[0x19] = "ADD HL,DE";
    instructions[0x1A] = "LD A,(DE)";
    instructions[0x1B] = "DEC DE";
    instructions[0x1C] = "INC E";
    instructions[0x1D] = "DEC E";
    instructions[0x1E] = "LD E,n";
    instructions[0x1F] = "RRA";
    instructions[0x20] = "JR NZ,e";
    instructions[0x21] = "LDI (HL),A";
    instructions[0x22] = "LD (nn),HL";
    instructions[0x23] = "INC HL";
    instructions[0x24] = "INC H";
    instructions[0x25] = "DEC H";
    instructions[0x26] = "LD H,n";
    instructions[0x27] = "DAA";
    instructions[0x28] = "JR Z,e";
    instructions[0x29] = "ADD HL,HL";
    instructions[0x2A] = "LDI A,(HL)";
    instructions[0x2B] = "DEC HL";
    instructions[0x2C] = "INC L";
    instructions[0x2D] = "DEC L";
    instructions[0x2E] = "LD L,n";
    instructions[0x2F] = "CPL";
    instructions[0x30] = "JR NC,e";
    instructions[0x31] = "LD SP,nn";
    instructions[0x32] = "LDD (HL),A";
    instructions[0x33] = "INC SP";
    instructions[0x34] = "INC (HL)";
    instructions[0x35] = "DEC (HL)";
    instructions[0x36] = "LD (HL),n";
    instructions[0x37] = "SCF";
    instructions[0x38] = "JR C,e";
    instructions[0x39] = "ADD HL,SP";
    instructions[0x3A] = "LDD A,(HL)";
    instructions[0x3B] = "DEC SP";
    instructions[0x3C] = "INC A";
    instructions[0x3D] = "DEC A";
    instructions[0x3E] = "LD A,n";
    instructions[0x3F] = "CCF";
    instructions[0x40] = "LD B,B";
    instructions[0x41] = "LD B,C";
    instructions[0x42] = "LD B,D";
    instructions[0x43] = "LD B,E";
    instructions[0x44] = "LD B,H";
    instructions[0x45] = "LD B,L";
    instructions[0x46] = "LD B,(HL)";
    instructions[0x47] = "LD B,A";
    instructions[0x48] = "LD C,B";
    instructions[0x49] = "LD C,C";
    instructions[0x4A] = "LD C,D";
    instructions[0x4B] = "LD C,E";
    instructions[0x4C] = "LD C,H";
    instructions[0x4D] = "LD C,L";
    instructions[0x4E] = "LD C,(HL)";
    instructions[0x4F] = "LD C,A";
    instructions[0x50] = "LD D,B";
    instructions[0x51] = "LD D,C";
    instructions[0x52] = "LD D,D";
    instructions[0x53] = "LD D,E";
    instructions[0x54] = "LD D,H";
    instructions[0x55] = "LD D,L";
    instructions[0x56] = "LD D,(HL)";
    instructions[0x57] = "LD D,A";
    instructions[0x58] = "LD E,B";
    instructions[0x59] = "LD E,C";
    instructions[0x5A] = "LD E,D";
    instructions[0x5B] = "LD E,E";
    instructions[0x5C] = "LD E,H";
    instructions[0x5D] = "LD E,L";
    instructions[0x5E] = "LD E,(HL)";
    instructions[0x5F] = "LD E,A";
    instructions[0x60] = "LD H,B";
    instructions[0x61] = "LD H,C";
    instructions[0x62] = "LD H,D";
    instructions[0x63] = "LD H,E";
    instructions[0x64] = "LD H,H";
    instructions[0x65] = "LD H,L";
    instructions[0x66] = "LD H,(HL)";
    instructions[0x67] = "LD H,A";
    instructions[0x68] = "LD L,B";
    instructions[0x69] = "LD L,C";
    instructions[0x6A] = "LD L,D";
    instructions[0x6B] = "LD L,E";
    instructions[0x6C] = "LD L,H";
    instructions[0x6D] = "LD L,L";
    instructions[0x6E] = "LD L,(HL)";
    instructions[0x6F] = "LD L,A";
    instructions[0x70] = "LD (HL),B";
    instructions[0x71] = "LD (HL),C";
    instructions[0x72] = "LD (HL),D";
    instructions[0x73] = "LD (HL),E";
    instructions[0x74] = "LD (HL),H";
    instructions[0x75] = "LD (HL),L";
    instructions[0x76] = "HALT";
    instructions[0x77] = "LD (HL),A";
    instructions[0x78] = "LD A,B";
    instructions[0x79] = "LD A,C";
    instructions[0x7A] = "LD A,D";
    instructions[0x7B] = "LD A,E";
    instructions[0x7C] = "LD A,H";
    instructions[0x7D] = "LD A,L";
    instructions[0x7E] = "LD A,(HL)";
    instructions[0x7F] = "LD A,A";
    instructions[0x80] = "ADD A,B";
    instructions[0x81] = "ADD A,C";
    instructions[0x82] = "ADD A,D";
    instructions[0x83] = "ADD A,E";
    instructions[0x84] = "ADD A,H";
    instructions[0x85] = "ADD A,L";
    instructions[0x86] = "ADD A,(HL)";
    instructions[0x87] = "ADD A,A";
    instructions[0x88] = "ADC A,B";
    instructions[0x89] = "ADC A,C";
    instructions[0x8A] = "ADC A,D";
    instructions[0x8B] = "ADC A,E";
    instructions[0x8C] = "ADC A,H";
    instructions[0x8D] = "ADC A,L";
    instructions[0x8E] = "ADC A,(HL)";
    instructions[0x8F] = "ADC A,A";
    instructions[0x90] = "SUB B";
    instructions[0x91] = "SUB C";
    instructions[0x92] = "SUB D";
    instructions[0x93] = "SUB E";
    instructions[0x94] = "SUB H";
    instructions[0x95] = "SUB L";
    instructions[0x96] = "SUB (HL)";
    instructions[0x97] = "SUB A";
    instructions[0x98] = "SBC B";
    instructions[0x99] = "SBC C";
    instructions[0x9A] = "SBC D";
    instructions[0x9B] = "SBC E";
    instructions[0x9C] = "SBC H";
    instructions[0x9D] = "SBC L";
    instructions[0x9E] = "SBC (HL)";
    instructions[0x9F] = "SBC A";
    instructions[0xA0] = "AND B";
    instructions[0xA1] = "AND C";
    instructions[0xA2] = "AND D";
    instructions[0xA3] = "AND E";
    instructions[0xA4] = "AND H";
    instructions[0xA5] = "AND L";
    instructions[0xA6] = "AND (HL)";
    instructions[0xA7] = "AND A";
    instructions[0xA8] = "XOR B";
    instructions[0xA9] = "XOR C";
    instructions[0xAA] = "XOR D";
    instructions[0xAB] = "XOR E";
    instructions[0xAC] = "XOR H";
    instructions[0xAD] = "XOR L";
    instructions[0xAE] = "XOR (HL)";
    instructions[0xAF] = "XOR A";
    instructions[0xB0] = "OR B";
    instructions[0xB1] = "OR C";
    instructions[0xB2] = "OR D";
    instructions[0xB3] = "OR E";
    instructions[0xB4] = "OR H";
    instructions[0xB5] = "OR L";
    instructions[0xB6] = "OR (HL)";
    instructions[0xB7] = "OR A";
    instructions[0xB8] = "CP B";
    instructions[0xB9] = "CP C";
    instructions[0xBA] = "CP D";
    instructions[0xBB] = "CP E";
    instructions[0xBC] = "CP H";
    instructions[0xBD] = "CP L";
    instructions[0xBE] = "CP (HL)";
    instructions[0xBF] = "CP A";
    instructions[0xC0] = "RET NZ";
    instructions[0xC1] = "POP BC";
    instructions[0xC2] = "JP NZ,nn";
    instructions[0xC3] = "JP nn";
    instructions[0xC4] = "CALL NZ,nn";
    instructions[0xC5] = "PUSH BC";
    instructions[0xC6] = "ADD A,n";
    instructions[0xC7] = "RST 00H";
    instructions[0xC8] = "RET Z";
    instructions[0xC9] = "RET";
    instructions[0xCA] = "JP Z,nn";
    instructions[0xCB] = "#CB";
    instructions[0xCC] = "CALL Z,nn";
    instructions[0xCD] = "CALL nn";
    instructions[0xCE] = "ADC A,n";
    instructions[0xCF] = "RST 08H";
    instructions[0xD0] = "RET NC";
    instructions[0xD1] = "POP DE";
    instructions[0xD2] = "JP NC,nn";
    instructions[0xD3] = "-";
    instructions[0xD4] = "CALL NC,nn";
    instructions[0xD5] = "PUSH DE";
    instructions[0xD6] = "SUB n";
    instructions[0xD7] = "RST 10H";
    instructions[0xD8] = "RET C";
    instructions[0xD9] = "RETI";
    instructions[0xDA] = "JP C,nn";
    instructions[0xDB] = "IN A,(n)";
    instructions[0xDC] = "CALL C,nn";
    instructions[0xDD] = "-";
    instructions[0xDE] = "SBC A,n";
    instructions[0xDF] = "RST 18H";
    instructions[0xE0] = "LD (FF00+n),A";
    instructions[0xE1] = "POP HL";
    instructions[0xE2] = "LD (FF00+C),A";
    instructions[0xE3] = "-";
    instructions[0xE4] = "-";
    instructions[0xE5] = "PUSH HL";
    instructions[0xE6] = "AND n";
    instructions[0xE7] = "RST 20H";
    instructions[0xE8] = "ADD SP,dd";
    instructions[0xE9] = "JP (HL)";
    instructions[0xEA] = "LD (nn),A";
    instructions[0xEB] = "-";
    instructions[0xEC] = "-";
    instructions[0xED] = "-";
    instructions[0xEE] = "XOR n";
    instructions[0xEF] = "RST 28H";
    instructions[0xF0] = "LD A,(FF00+n)";
    instructions[0xF1] = "POP AF";
    instructions[0xF2] = "LD A,(FF00+C)";
    instructions[0xF3] = "DI";
    instructions[0xF4] = "-";
    instructions[0xF5] = "PUSH AF";
    instructions[0xF6] = "OR n";
    instructions[0xF7] = "RST 30H";
    instructions[0xF8] = "LD HL,SP+dd";
    instructions[0xF9] = "LD SP,HL";
    instructions[0xFA] = "LD A,(nn)";
    instructions[0xFB] = "EI";
    instructions[0xFC] = "-";
    instructions[0xFD] = "-";
    instructions[0xFE] = "CP n";
    instructions[0xFF] = "RST 38H";
}

void Z80InstructionMap::populateCBInstructionMap()
{
    cbInstructions[0x00] = "RLC B";
    cbInstructions[0x01] = "RLC C";
    cbInstructions[0x02] = "RLC D";
    cbInstructions[0x03] = "RLC E";
    cbInstructions[0x04] = "RLC H";
    cbInstructions[0x05] = "RLC L";
    cbInstructions[0x06] = "RLC (HL)";
    cbInstructions[0x07] = "RLC A";
    cbInstructions[0x08] = "RRC B";
    cbInstructions[0x09] = "RRC C";
    cbInstructions[0x0A] = "RRC D";
    cbInstructions[0x0B] = "RRC E";
    cbInstructions[0x0C] = "RRC H";
    cbInstructions[0x0D] = "RRC L";
    cbInstructions[0x0E] = "RRC (HL)";
    cbInstructions[0x0F] = "RRC A";
    cbInstructions[0x10] = "RL B";
    cbInstructions[0x11] = "RL C";
    cbInstructions[0x12] = "RL D";
    cbInstructions[0x13] = "RL E";
    cbInstructions[0x14] = "RL H";
    cbInstructions[0x15] = "RL L";
    cbInstructions[0x16] = "RL (HL)";
    cbInstructions[0x17] = "RL A";
    cbInstructions[0x18] = "RR B";
    cbInstructions[0x19] = "RR C";
    cbInstructions[0x1A] = "RR D";
    cbInstructions[0x1B] = "RR E";
    cbInstructions[0x1C] = "RR H";
    cbInstructions[0x1D] = "RR L";
    cbInstructions[0x1E] = "RR (HL)";
    cbInstructions[0x1F] = "RR A";
    cbInstructions[0x20] = "SLA B";
    cbInstructions[0x21] = "SLA C";
    cbInstructions[0x22] = "SLA D";
    cbInstructions[0x23] = "SLA E";
    cbInstructions[0x24] = "SLA H";
    cbInstructions[0x25] = "SLA L";
    cbInstructions[0x26] = "SLA (HL)";
    cbInstructions[0x27] = "SLA A";
    cbInstructions[0x28] = "SRA B";
    cbInstructions[0x29] = "SRA C";
    cbInstructions[0x2A] = "SRA D";
    cbInstructions[0x2B] = "SRA E";
    cbInstructions[0x2C] = "SRA H";
    cbInstructions[0x2D] = "SRA L";
    cbInstructions[0x2E] = "SRA (HL)";
    cbInstructions[0x2F] = "SRA A";
    cbInstructions[0x30] = "SWAP B/(HL)";
    cbInstructions[0x31] = "SWAP C/(HL)";
    cbInstructions[0x32] = "SWAP D/(HL)";
    cbInstructions[0x33] = "SWAP E/(HL)";
    cbInstructions[0x34] = "SWAP H/(HL)";
    cbInstructions[0x35] = "SWAP L/(HL)";
    cbInstructions[0x36] = "SWAP (HL)/(HL)";
    cbInstructions[0x37] = "SWAP A/(HL)";
    cbInstructions[0x38] = "SRL B";
    cbInstructions[0x39] = "SRL C";
    cbInstructions[0x3A] = "SRL D";
    cbInstructions[0x3B] = "SRL E";
    cbInstructions[0x3C] = "SRL H";
    cbInstructions[0x3D] = "SRL L";
    cbInstructions[0x3E] = "SRL (HL)";
    cbInstructions[0x3F] = "SRL A";
    cbInstructions[0x40] = "BIT 0,B";
    cbInstructions[0x41] = "BIT 0,C";
    cbInstructions[0x42] = "BIT 0,D";
    cbInstructions[0x43] = "BIT 0,E";
    cbInstructions[0x44] = "BIT 0,H";
    cbInstructions[0x45] = "BIT 0,L";
    cbInstructions[0x46] = "BIT 0,(HL)";
    cbInstructions[0x47] = "BIT 0,A";
    cbInstructions[0x48] = "BIT 1,B";
    cbInstructions[0x49] = "BIT 1,C";
    cbInstructions[0x4A] = "BIT 1,D";
    cbInstructions[0x4B] = "BIT 1,E";
    cbInstructions[0x4C] = "BIT 1,H";
    cbInstructions[0x4D] = "BIT 1,L";
    cbInstructions[0x4E] = "BIT 1,(HL)";
    cbInstructions[0x4F] = "BIT 1,A";
    cbInstructions[0x50] = "BIT 2,B";
    cbInstructions[0x51] = "BIT 2,C";
    cbInstructions[0x52] = "BIT 2,D";
    cbInstructions[0x53] = "BIT 2,E";
    cbInstructions[0x54] = "BIT 2,H";
    cbInstructions[0x55] = "BIT 2,L";
    cbInstructions[0x56] = "BIT 2,(HL)";
    cbInstructions[0x57] = "BIT 2,A";
    cbInstructions[0x58] = "BIT 3,B";
    cbInstructions[0x59] = "BIT 3,C";
    cbInstructions[0x5A] = "BIT 3,D";
    cbInstructions[0x5B] = "BIT 3,E";
    cbInstructions[0x5C] = "BIT 3,H";
    cbInstructions[0x5D] = "BIT 3,L";
    cbInstructions[0x5E] = "BIT 3,(HL)";
    cbInstructions[0x5F] = "BIT 3,A";
    cbInstructions[0x60] = "BIT 4,B";
    cbInstructions[0x61] = "BIT 4,C";
    cbInstructions[0x62] = "BIT 4,D";
    cbInstructions[0x63] = "BIT 4,E";
    cbInstructions[0x64] = "BIT 4,H";
    cbInstructions[0x65] = "BIT 4,L";
    cbInstructions[0x66] = "BIT 4,(HL)";
    cbInstructions[0x67] = "BIT 4,A";
    cbInstructions[0x68] = "BIT 5,B";
    cbInstructions[0x69] = "BIT 5,C";
    cbInstructions[0x6A] = "BIT 5,D";
    cbInstructions[0x6B] = "BIT 5,E";
    cbInstructions[0x6C] = "BIT 5,H";
    cbInstructions[0x6D] = "BIT 5,L";
    cbInstructions[0x6E] = "BIT 5,(HL)";
    cbInstructions[0x6F] = "BIT 5,A";
    cbInstructions[0x70] = "BIT 6,B";
    cbInstructions[0x71] = "BIT 6,C";
    cbInstructions[0x72] = "BIT 6,D";
    cbInstructions[0x73] = "BIT 6,E";
    cbInstructions[0x74] = "BIT 6,H";
    cbInstructions[0x75] = "BIT 6,L";
    cbInstructions[0x76] = "BIT 6,(HL)";
    cbInstructions[0x77] = "BIT 6,A";
    cbInstructions[0x78] = "BIT 7,B";
    cbInstructions[0x79] = "BIT 7,C";
    cbInstructions[0x7A] = "BIT 7,D";
    cbInstructions[0x7B] = "BIT 7,E";
    cbInstructions[0x7C] = "BIT 7,H";
    cbInstructions[0x7D] = "BIT 7,L";
    cbInstructions[0x7E] = "BIT 7,(HL)";
    cbInstructions[0x7F] = "BIT 7,A";
    cbInstructions[0x80] = "RES 0,B";
    cbInstructions[0x81] = "RES 0,C";
    cbInstructions[0x82] = "RES 0,D";
    cbInstructions[0x83] = "RES 0,E";
    cbInstructions[0x84] = "RES 0,H";
    cbInstructions[0x85] = "RES 0,L";
    cbInstructions[0x86] = "RES 0,(HL)";
    cbInstructions[0x87] = "RES 0,A";
    cbInstructions[0x88] = "RES 1,B";
    cbInstructions[0x89] = "RES 1,C";
    cbInstructions[0x8A] = "RES 1,D";
    cbInstructions[0x8B] = "RES 1,E";
    cbInstructions[0x8C] = "RES 1,H";
    cbInstructions[0x8D] = "RES 1,L";
    cbInstructions[0x8E] = "RES 1,(HL)";
    cbInstructions[0x8F] = "RES 1,A";
    cbInstructions[0x90] = "RES 2,B";
    cbInstructions[0x91] = "RES 2,C";
    cbInstructions[0x92] = "RES 2,D";
    cbInstructions[0x93] = "RES 2,E";
    cbInstructions[0x94] = "RES 2,H";
    cbInstructions[0x95] = "RES 2,L";
    cbInstructions[0x96] = "RES 2,(HL)";
    cbInstructions[0x97] = "RES 2,A";
    cbInstructions[0x98] = "RES 3,B";
    cbInstructions[0x99] = "RES 3,C";
    cbInstructions[0x9A] = "RES 3,D";
    cbInstructions[0x9B] = "RES 3,E";
    cbInstructions[0x9C] = "RES 3,H";
    cbInstructions[0x9D] = "RES 3,L";
    cbInstructions[0x9E] = "RES 3,(HL)";
    cbInstructions[0x9F] = "RES 3,A";
    cbInstructions[0xA0] = "RES 4,B";
    cbInstructions[0xA1] = "RES 4,C";
    cbInstructions[0xA2] = "RES 4,D";
    cbInstructions[0xA3] = "RES 4,E";
    cbInstructions[0xA4] = "RES 4,H";
    cbInstructions[0xA5] = "RES 4,L";
    cbInstructions[0xA6] = "RES 4,(HL)";
    cbInstructions[0xA7] = "RES 4,A";
    cbInstructions[0xA8] = "RES 5,B";
    cbInstructions[0xA9] = "RES 5,C";
    cbInstructions[0xAA] = "RES 5,D";
    cbInstructions[0xAB] = "RES 5,E";
    cbInstructions[0xAC] = "RES 5,H";
    cbInstructions[0xAD] = "RES 5,L";
    cbInstructions[0xAE] = "RES 5,(HL)";
    cbInstructions[0xAF] = "RES 5,A";
    cbInstructions[0xB0] = "RES 6,B";
    cbInstructions[0xB1] = "RES 6,C";
    cbInstructions[0xB2] = "RES 6,D";
    cbInstructions[0xB3] = "RES 6,E";
    cbInstructions[0xB4] = "RES 6,H";
    cbInstructions[0xB5] = "RES 6,L";
    cbInstructions[0xB6] = "RES 6,(HL)";
    cbInstructions[0xB7] = "RES 6,A";
    cbInstructions[0xB8] = "RES 7,B";
    cbInstructions[0xB9] = "RES 7,C";
    cbInstructions[0xBA] = "RES 7,D";
    cbInstructions[0xBB] = "RES 7,E";
    cbInstructions[0xBC] = "RES 7,H";
    cbInstructions[0xBD] = "RES 7,L";
    cbInstructions[0xBE] = "RES 7,(HL)";
    cbInstructions[0xBF] = "RES 7,A";
    cbInstructions[0xC0] = "SET 0,B";
    cbInstructions[0xC1] = "SET 0,C";
    cbInstructions[0xC2] = "SET 0,D";
    cbInstructions[0xC3] = "SET 0,E";
    cbInstructions[0xC4] = "SET 0,H";
    cbInstructions[0xC5] = "SET 0,L";
    cbInstructions[0xC6] = "SET 0,(HL)";
    cbInstructions[0xC7] = "SET 0,A";
    cbInstructions[0xC8] = "SET 1,B";
    cbInstructions[0xC9] = "SET 1,C";
    cbInstructions[0xCA] = "SET 1,D";
    cbInstructions[0xCB] = "SET 1,E";
    cbInstructions[0xCC] = "SET 1,H";
    cbInstructions[0xCD] = "SET 1,L";
    cbInstructions[0xCE] = "SET 1,(HL)";
    cbInstructions[0xCF] = "SET 1,A";
    cbInstructions[0xD0] = "SET 2,B";
    cbInstructions[0xD1] = "SET 2,C";
    cbInstructions[0xD2] = "SET 2,D";
    cbInstructions[0xD3] = "SET 2,E";
    cbInstructions[0xD4] = "SET 2,H";
    cbInstructions[0xD5] = "SET 2,L";
    cbInstructions[0xD6] = "SET 2,(HL)";
    cbInstructions[0xD7] = "SET 2,A";
    cbInstructions[0xD8] = "SET 3,B";
    cbInstructions[0xD9] = "SET 3,C";
    cbInstructions[0xDA] = "SET 3,D";
    cbInstructions[0xDB] = "SET 3,E";
    cbInstructions[0xDC] = "SET 3,H";
    cbInstructions[0xDD] = "SET 3,L";
    cbInstructions[0xDE] = "SET 3,(HL)";
    cbInstructions[0xDF] = "SET 3,A";
    cbInstructions[0xE0] = "SET 4,B";
    cbInstructions[0xE1] = "SET 4,C";
    cbInstructions[0xE2] = "SET 4,D";
    cbInstructions[0xE3] = "SET 4,E";
    cbInstructions[0xE4] = "SET 4,H";
    cbInstructions[0xE5] = "SET 4,L";
    cbInstructions[0xE6] = "SET 4,(HL)";
    cbInstructions[0xE7] = "SET 4,A";
    cbInstructions[0xE8] = "SET 5,B";
    cbInstructions[0xE9] = "SET 5,C";
    cbInstructions[0xEA] = "SET 5,D";
    cbInstructions[0xEB] = "SET 5,E";
    cbInstructions[0xEC] = "SET 5,H";
    cbInstructions[0xED] = "SET 5,L";
    cbInstructions[0xEE] = "SET 5,(HL)";
    cbInstructions[0xEF] = "SET 5,A";
    cbInstructions[0xF0] = "SET 6,B";
    cbInstructions[0xF1] = "SET 6,C";
    cbInstructions[0xF2] = "SET 6,D";
    cbInstructions[0xF3] = "SET 6,E";
    cbInstructions[0xF4] = "SET 6,H";
    cbInstructions[0xF5] = "SET 6,L";
    cbInstructions[0xF6] = "SET 6,(HL)";
    cbInstructions[0xF7] = "SET 6,A";
    cbInstructions[0xF8] = "SET 7,B";
    cbInstructions[0xF9] = "SET 7,C";
    cbInstructions[0xFA] = "SET 7,D";
    cbInstructions[0xFB] = "SET 7,E";
    cbInstructions[0xFC] = "SET 7,H";
    cbInstructions[0xFD] = "SET 7,L";
    cbInstructions[0xFE] = "SET 7,(HL)";
    cbInstructions[0xFF] = "SET 7,A";
}
